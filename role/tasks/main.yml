# connect to docker hub
- name: Log into DockerHub
  docker_login:
    username: "{{ var-docker-hub-login }}"
    password: "{{ var-docker-hub-password }}"

# Creact file	
- name: Change file ownership, group and permissions
  file:
    path: "{{ house }}/new-folder"
    state: directory

# Copy private keys in target    
- name: Copy file with owner and permissions
  copy:
    src: "{{ var-my-private-key }}"
    dest: "{{ house }}/.ssh/id_rsa"
    owner: centos
    
# Example git checkout from Ansible Playbooks
- git:
    repo: "{{ var-repository-github }}"
    dest: "{{ house }}/new-folder"
    key_file: "{{ house }}/.ssh/id_rsa"
    accept_hostkey: yes
    force: yes
    version: "{{ repository-brach }}"
    recursive: no

# build and push image   
- name: Build an image and push it to a private repo
  docker_image:
    build:
      path: "{{ house }}/new-folder/battlebaot/fake-backend/"
    name: "{{ var-docker-hub-login }}/battleboat-image"
    tag: "{{ repository-tag }}"
    push: yes
    source: build

# creact network   
- name: Create a network
  docker_network:
    name: network_battleboat
         
# deploy dbgame   
# Pour le volume les donn√©es se trouver dans le container je fait une copy du container dans data
- name: Create a data container db
  docker_container:
    name: dbgame
    image: mysql:5.7
    state: started 
    volumes:
      - "data:/var/lib/mysql"
    networks:
      - name: network_battleboat

# deploy api  
# La page se trouve dans battleboat je fait une copy dans le repetoir du container /etc/backend/static
- name: Create a data container api
  docker_container:
    name: frontend
    image: "{{var-docker-hub-login}}/battleboat-image:{{repository-tag}}"
    state: started
    volumes:
      - "{{ house }}/new-folder/battleboat:/etc/backend/static"
    networks:
      - name: network_battleboat
    ports:
     - "80:3000"
